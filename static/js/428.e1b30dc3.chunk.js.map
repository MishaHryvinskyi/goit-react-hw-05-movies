{"version":3,"file":"static/js/428.e1b30dc3.chunk.js","mappings":"iRAEaA,EAAiBC,EAAAA,EAAAA,IAAH,sOAWdC,EAAaD,EAAAA,EAAAA,MAAH,wW,SCVVE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,qJAQVI,EAAYJ,EAAAA,EAAAA,GAAH,iIAOTK,EAAgBL,EAAAA,EAAAA,GAAH,8X,SCI1B,EAnBkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACKE,EAAOG,KAAI,SAACC,GAAD,OACV,SAACL,EAAD,WACE,SAACH,EAAD,CACES,MAAO,CAAEC,KAAML,GACfM,GAAE,kBAAaH,EAAMI,IAFvB,SAIKJ,EAAMK,SALOL,EAAMI,GADhB,KAYnB,EC6BD,EA3Ce,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA4B3C,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEMC,EAAAA,EAAAA,IAAgBJ,GAFtB,OAEXK,EAFW,OAGXC,EAAaD,EAASE,KAAKC,QACjCZ,EAAUU,GAJO,gDAMjBG,QAAQC,MAAM,0BAAd,MANiB,yDAAH,qDAUZC,EAAiBC,YAAW,WAChCT,GACD,GAAE,KAEH,OAAO,kBAAMU,aAAaF,EAAnB,CACR,GAAE,CAACX,KAGF,UAACtB,EAAD,YACE,SAACE,EAAD,CACEkC,KAAK,OACLC,SA9BoB,SAACC,GACzB,IAAMC,EAAeD,EAAEE,OAAOC,MAC9B,GAAqB,KAAjBF,EACF,OAAOlB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOiB,GAC1B,EAyBKG,YAAY,iBAEd,SAAC,EAAD,CAAWnC,OAAQA,MAGxB,C,+LC7CKoC,EAAU,mCAEHC,EAAkB,mCAAG,4FACf,kDACXC,EAAS,CACbC,QAASH,GAHqB,SAKFI,EAAAA,EAAAA,IAJb,kDAIiC,CAAEF,OAAAA,IALpB,cAK1BG,EAL0B,yBAMzBA,GANyB,2CAAH,qDASlBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBC,EADqB,6CAC4BD,GACjDL,EAAS,CACbC,QAASH,GAHgB,SAKFI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKrBO,EALqB,yBAMpBA,GANoB,2CAAH,sDASbC,EAAO,mCAAG,WAAMH,GAAN,kFACfC,EADe,6CACkCD,EADlC,YAEfL,EAAS,CACbC,QAASH,GAHU,SAKFI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKfS,EALe,yBAMdA,GANc,2CAAH,sDASPC,EAAU,mCAAG,WAAML,GAAN,kFAClBC,EADkB,6CAC+BD,EAD/B,YAElBL,EAAS,CACbC,QAASH,GAHa,SAKLI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALjB,cAKlBS,EALkB,yBAMjBA,GANiB,2CAAH,sDASV5B,EAAe,mCAAG,WAAM8B,GAAN,2HAEvBX,EAAS,CACbC,QAASH,EACTrB,MAAM,GAAD,OAAKkC,IAJiB,SAMRT,EAAAA,EAAAA,IANQ,4CAMY,CAAEF,OAAAA,IANd,cAMvBtC,EANuB,yBAOtBA,GAPsB,2CAAH,qD","sources":["pages/Movie/Movies.styled.jsx","components/ListMovie/ListMovie.styled.jsx","components/ListMovie/ListMovie.jsx","pages/Movie/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    justify-content: center;\n    padding-top: 40px;\n    padding-bottom: 482px;\n`;\n\nexport const MovieInput = styled.input`\n    width: 400px;\n    height: 30px;\n    border-radius: 10px;\n    background-color: #975a5e;\n    color: #f3cba5;\n    padding: 10px;\n    font-size: 24px;\n    margin-bottom: 50px;\n    border: solid 3px;\n    box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n    -moz-box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n`;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    color: #f3cba5;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const MovieList = styled.ul`\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    justify-content: center;\n`;\n\nexport const MovieListItem = styled.li`\n    background-color: #975a5e;\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 10px;\n    transition: transform 0.3s ease;\n    \n        &:hover {\n            transform: scale(1.05);\n            box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n            -moz-box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n        }\n`;","import { useLocation } from \"react-router-dom\";\nimport { MovieList, MovieListItem, StyledLink } from './ListMovie.styled.jsx';\n\nconst ListMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n        {movies.map((movie) => (\n          <MovieListItem key={movie.id}>\n            <StyledLink \n              state={{ from: location }} \n              to={`/movies/${movie.id}`} \n              >\n                {movie.title}\n            </StyledLink>\n          </MovieListItem>\n        ))}\n      </MovieList>\n  )\n}\n\nexport default ListMovie;","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getSearchMovies } from \"../../services/api\";\nimport { MovieContainer, MovieInput } from './Movies.styled';\nimport  ListMovie  from '../../components/ListMovie/ListMovie';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") ?? \"\";\n\n  const updateQueryString = (e) => {\n    const movieIdValue = e.target.value;\n    if (movieIdValue === \"\") {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: movieIdValue });\n  };\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const response = await getSearchMovies(query);\n        const moviesData = response.data.results;\n        setMovies(moviesData);\n      } catch (error) {\n        console.error(\"Error searching movies:\", error);\n      }\n    };\n\n    const debounceSearch = setTimeout(() => {\n      searchMovies();\n    }, 500); \n\n    return () => clearTimeout(debounceSearch);\n  }, [query]);\n\n  return (\n    <MovieContainer>\n      <MovieInput \n        type=\"text\" \n        onChange={updateQueryString} \n        placeholder=\"enter movie\" \n      />\n      <ListMovie movies={movies} />\n    </MovieContainer>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '0f1efce4687e0d99ded26e5d35e0a6b0';\n\nexport const getTrendsDayMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesDayTrends = await axios.get(BASE_URL, { params });\n  return moviesDayTrends;\n};\n\nexport const getMoviesById = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesById = await axios.get(BASE_URL, { params });\n  return moviesById;\n};\n\nexport const getCast = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getSearchMovies = async querySearch => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const params = {\n    api_key: API_KEY,\n    query: `${querySearch}`,\n  };\n  const movies = await axios.get(BASE_URL, { params });\n  return movies;\n};"],"names":["MovieContainer","styled","MovieInput","StyledLink","NavLink","MovieList","MovieListItem","movies","location","useLocation","map","movie","state","from","to","id","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovies","getSearchMovies","response","moviesData","data","results","console","error","debounceSearch","setTimeout","clearTimeout","type","onChange","e","movieIdValue","target","value","placeholder","API_KEY","getTrendsDayMovies","params","api_key","axios","moviesDayTrends","getMoviesById","movieId","BASE_URL","moviesById","getCast","cast","getReviews","querySearch"],"sourceRoot":""}