{"version":3,"file":"static/js/775.617df6ff.chunk.js","mappings":"+PAsCA,EA5BwB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACzB,OACE,SAAC,KAAD,UACKA,EAAOC,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAA0BC,GAAE,kBAAaD,EAAME,IAA/C,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAG,0CAAqCH,EAAMI,aAC9CC,IAAKL,EAAMM,SAEb,SAAC,KAAD,UAAkBN,EAAMM,YANZN,EAAME,GADP,KAaxB,ECID,EAzBa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,gHAEFC,EAAAA,EAAAA,MAFE,OAEnBC,EAFmB,OAGnBC,EAAaD,EAASE,KAAKC,QACjCP,EAAUK,GAJe,gDAMzBG,QAAQC,MAAM,mCAAd,MANyB,yDAAH,qDAU1BP,GACD,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,UAAY,2BACZ,SAAC,EAAD,CAAiBZ,OAAQA,MAG9B,C,+LC1BKoB,EAAU,mCAEHP,EAAkB,mCAAG,4FACf,kDACXQ,EAAS,CACbC,QAASF,GAHqB,SAKFG,EAAAA,EAAAA,IAJb,kDAIiC,CAAEF,OAAAA,IALpB,cAK1BG,EAL0B,yBAMzBA,GANyB,2CAAH,qDASlBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBC,EADqB,6CAC4BD,GACjDL,EAAS,CACbC,QAASF,GAHgB,SAKFG,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKrBO,EALqB,yBAMpBA,GANoB,2CAAH,sDASbC,EAAO,mCAAG,WAAMH,GAAN,kFACfC,EADe,6CACkCD,EADlC,YAEfL,EAAS,CACbC,QAASF,GAHU,SAKFG,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKfS,EALe,yBAMdA,GANc,2CAAH,sDASPC,EAAU,mCAAG,WAAML,GAAN,kFAClBC,EADkB,6CAC+BD,EAD/B,YAElBL,EAAS,CACbC,QAASF,GAHa,SAKLG,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALjB,cAKlBS,EALkB,yBAMjBA,GANiB,2CAAH,sDASVE,EAAe,mCAAG,WAAMC,GAAN,2HAEvBZ,EAAS,CACbC,QAASF,EACTc,MAAM,GAAD,OAAKD,IAJiB,SAMRV,EAAAA,EAAAA,IANQ,4CAMY,CAAEF,OAAAA,IANd,cAMvBrB,EANuB,yBAOtBA,GAPsB,2CAAH,qD","sources":["components/TrendsMovieList/TrendsMovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { \n  MovieTrendList,\n  MovieTrendListItem, \n  MovieTrendImg,\n  MovieTrendTitle,\n  MovieLink \n} from './TrendsMovieListStyled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TrendsMovieList = ({ movies }) => {\n  return (\n    <MovieTrendList>\n        {movies.map(movie => (\n          <MovieLink key={movie.id} to={`/movies/${movie.id}`}>\n            <MovieTrendListItem>\n              <MovieTrendImg\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <MovieTrendTitle>{movie.title}</MovieTrendTitle>\n            </MovieTrendListItem>\n          </MovieLink>\n        ))}\n      </MovieTrendList>\n  );\n};\n\nTrendsMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TrendsMovieList;\n    ","import React, { useState, useEffect } from 'react';\nimport { getTrendsDayMovies } from '../../services/api';\nimport { ContainerMovie, MovieTitle } from '../../components/TrendsMovieList/TrendsMovieListStyled';\nimport TrendsMovieList from '../../components/TrendsMovieList/TrendsMovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendsDayMovies = async () => {\n      try {\n        const response = await getTrendsDayMovies();\n        const moviesData = response.data.results;\n        setMovies(moviesData);\n      } catch (error) {\n        console.error('Error fetching trend day movies:', error);\n      }\n    };\n\n    fetchTrendsDayMovies();\n  }, []);\n\n  return (\n    <ContainerMovie>\n      <MovieTitle>Trending Movies Today</MovieTitle>\n      <TrendsMovieList movies={movies} />\n    </ContainerMovie>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '0f1efce4687e0d99ded26e5d35e0a6b0';\n\nexport const getTrendsDayMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesDayTrends = await axios.get(BASE_URL, { params });\n  return moviesDayTrends;\n};\n\nexport const getMoviesById = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesById = await axios.get(BASE_URL, { params });\n  return moviesById;\n};\n\nexport const getCast = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getSearchMovies = async querySearch => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const params = {\n    api_key: API_KEY,\n    query: `${querySearch}`,\n  };\n  const movies = await axios.get(BASE_URL, { params });\n  return movies;\n};"],"names":["movies","map","movie","to","id","src","poster_path","alt","title","useState","setMovies","useEffect","fetchTrendsDayMovies","getTrendsDayMovies","response","moviesData","data","results","console","error","API_KEY","params","api_key","axios","moviesDayTrends","getMoviesById","movieId","BASE_URL","moviesById","getCast","cast","getReviews","getSearchMovies","querySearch","query"],"sourceRoot":""}