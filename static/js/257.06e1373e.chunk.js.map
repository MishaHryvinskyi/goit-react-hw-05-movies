{"version":3,"file":"static/js/257.06e1373e.chunk.js","mappings":"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","sources":["components/API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Review.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0f1efce4687e0d99ded26e5d35e0a6b0';\n\nexport const getTrendsDayMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesDayTrends = await axios.get(BASE_URL, { params });\n  return moviesDayTrends;\n};\n\nexport const getMoviesById = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesById = await axios.get(BASE_URL, { params });\n  return moviesById;\n};\n\nexport const getCast = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getSearchMovies = async querySearch => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const params = {\n    api_key: API_KEY,\n    query: `${querySearch}`,\n  };\n  const movies = await axios.get(BASE_URL, { params });\n  return movies;\n};","import styled from \"@emotion/styled\";\n\nexport const CastContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n\nexport const TitleCast = styled.h2`\n    text-align: center; \n    margin-bottom: 40px;   \n    color: #f3cba5;\n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nexport const CastListItem = styled.li`\n    margin-right: 10px;\n    &:nth-child(6n) {\n        margin-right: 0px;\n    }\n    margin-bottom: 10px;\n    background-color: #975a5e;\n    border-radius: 10px;\n    \n    &:hover {\n        box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n        -moz-box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n    }\n`;\n\nexport const CastImg = styled.img`\n    border-radius: 10px 10px 0  0 ;\n    margin-bottom: 10px;\n`;\n\nexport const CastParagraph = styled.h4`\n    text-align: center;\n    color: #f3cba5;\n`;\n\nexport const CastRole = styled.p`\n    width: 80px;   \n    text-align: center;\n    color: #f3cba5;\n    margin-left: auto;\n    margin-right: auto;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { \n  CastContainer, \n  TitleCast, \n  CastList, \n  CastListItem, \n  CastImg, \n  CastParagraph, \n  CastRole \n} from './Cast.styled';\n\nconst Cast = ({ cast }) => {\n  const defaultImage = \"https://icon-library.com/images/no-photo-available-icon/no-photo-available-icon-20.jpg\";\n\n  return (\n    <CastContainer>\n      <TitleCast>Cast</TitleCast>\n      <CastList>\n        {cast.map((actor) => (\n          <CastListItem key={actor.id}>\n            <CastImg\n              src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : defaultImage}\n              alt={actor.name}\n              width=\"200\"\n              height=\"300\"\n            />\n            <CastParagraph>{actor.name}</CastParagraph>\n            <CastRole>{actor.character}</CastRole>\n          </CastListItem>\n        ))}\n      </CastList>\n    </CastContainer>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default Cast;","import styled from \"@emotion/styled\";\n\nexport const ContainerReviews = styled.div`\n    padding: 80px;\n`;\n\nexport const ReviewsTitle = styled.h2`\n    text-align: center;\n    margin-bottom: 40px;\n    color: #f3cba5;\n`;\n\nexport const ReviewsList = styled.li`\n    background-color: #975a5e;\n    margin-bottom: 30px;\n    padding: 20px;\n    border-radius: 20px;\n    box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n-moz-box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n`;\n\nexport const ReviewsAuthor = styled.h3`\n    color: #f3cba5;\n`;\n\nexport const ReviewsContent = styled.p`\n    color: #f3cba5;\n`;","import React from \"react\";\nimport { ContainerReviews, ReviewsTitle, ReviewsAuthor, ReviewsList, ReviewsContent } from './Reviews.styled.jsx'\nimport PropTypes from \"prop-types\";\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <ContainerReviews>\n      <ReviewsTitle>Reviews</ReviewsTitle>\n      <ul>\n        {reviews.map((review) => (\n          <ReviewsList key={review.id}>\n            <ReviewsAuthor>{review.author}</ReviewsAuthor>\n            <ReviewsContent>{review.content}</ReviewsContent>\n          </ReviewsList>\n        ))}\n      </ul>\n    </ContainerReviews>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Reviews;","import styled from \"@emotion/styled\";\n\nexport const ContainerMovie = styled.div`\n    display: flex;\n    padding: 80px;\n`;\n\nexport const ContainerLink = styled.div`\n    display: flex;\n    align-items: center;\n    padding-left: 50px;\n    padding-top: 50px;\n`;\n\nexport const MovieTitle = styled.h1`\n    text-align: center;\n    margin-bottom: 20px;\n    color: #f3cba5;\n`;\n\nexport const MovieImg = styled.img`\n    width: 400px;\n    border-radius: 30px;\n    box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n    -moz-box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n    box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n`;\n\nexport const ContainerWrap = styled.div`\n    margin-bottom: auto;\n    margin-top: auto;\n    margin-left: 50px;\n    padding: 200px 30px 200px 30px;\n    background-color: #975a5e;\n    border-radius: 30px;\n    box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n    -moz-box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n    box-shadow: -1px 1px 49px -10px rgba(211,214,219,1);\n`;\n\nexport const ParagraphMovie = styled.p`\n    color: #f3cba5;\n`;\n\nexport const ListLink = styled.ul`\n    display: flex;\n    background-color: #453953;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    padding-bottom: 50px;\n`;\n\nexport const ItemLink = styled.li`\n    background-color: #975a5e;\n    margin-left: 30px;\n    padding:  10px 20px;\n    border-radius: 10px;\n    transition: transform 0.3s ease;\n\n    &:hover {\n        background-color: #a55233;\n        transform: scale(1.05);\n        box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n        -moz-box-shadow: -1px 1px 29px -10px rgba(211, 214, 219, 1);\n    }\n`;","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, Link, useLocation, NavLink } from 'react-router-dom';\nimport { getMoviesById, getCast, getReviews } from '../../components/API/API';\nimport Reviews from '../../components/Reviews/Review';\nimport Cast from '../../components/Cast/Cast';\nimport { \n  ContainerMovie, \n  MovieTitle,\n  MovieImg,\n  ContainerWrap,\n  ParagraphMovie,\n  ItemLink,\n  ListLink,\n  ContainerLink\n } from './MovieDetails.styled';\n\nconst linkStyle = {\n  color: '#f3cba5',\n  textDecoration: 'none',\n  fontSize: '20',\n  fontWeight: '600',\n  padding: '10px'\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false); \n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await getMoviesById(movieId);\n        setMovieDetails(movieResponse.data);\n      } catch (error) {\n        console.log('Помилка отримання деталей фільму:', error);\n      }\n    };\n\n    const fetchCast = async () => {\n      try {\n        const castResponse = await getCast(movieId);\n        setCast(castResponse.data.cast);\n      } catch (error) {\n        console.log('Помилка отримання акторського складу:', error);\n      }\n    };\n\n    const fetchReviews = async () => {\n      try {\n        const reviewsResponse = await getReviews(movieId);\n        setReviews(reviewsResponse.data.results);\n      } catch (error) {\n        console.log('Помилка отримання відгуків:', error);\n      }\n    };\n\n    fetchMovieDetails();\n    if (showCast) {\n      fetchCast();\n    }\n    if (showReviews) { \n      fetchReviews();\n    }\n  }, [movieId, showCast, showReviews]); \n\n  const handleShowCast = () => {\n    setShowCast(true);\n  };\n\n  const handleShowReviews = () => {\n    setShowReviews(true); \n  };\n\n  return (\n    <div>\n      <ContainerLink>\n        <Link \n          to={backLinkLocationRef.current} \n          style={{ \n            color: '#453953', \n            textDecoration: 'none',\n            padding: '10px',\n            backgroundColor: '#f3cba5',\n            width: '100px',\n            fontSize: '20px',\n            fontWeight: '600',\n            borderRadius: '10px',\n            textAlign: 'center' \n            }}>\n              Back\n        </Link>\n      </ContainerLink>\n      {movieDetails ? (\n        <ContainerMovie>\n            <MovieImg\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          <ContainerWrap>\n          <MovieTitle>{movieDetails.title}</MovieTitle>\n            <ParagraphMovie><b>Review:</b> {movieDetails.overview}</ParagraphMovie>\n            <ParagraphMovie><b>Rating:</b>Rating: {movieDetails.vote_average}</ParagraphMovie>\n            <ParagraphMovie><b>Release date:</b> {movieDetails.release_date}</ParagraphMovie>\n          </ContainerWrap>\n        </ContainerMovie>\n      ) : (\n        <p>Loading...</p>\n      )}\n\n      {showCast && cast.length > 0 && <Cast cast={cast} showCast={showCast} />}\n\n      {showReviews && reviews.length > 0 && <Reviews reviews={reviews} showReviews={showReviews} />} \n        <ListLink>\n          <ItemLink>\n            <NavLink to={`/movies/${movieId}/cast`} onClick={handleShowCast} style={linkStyle}>Cast</NavLink>\n          </ItemLink>\n          <ItemLink>\n            <NavLink to={`/movies/${movieId}/reviews`} onClick={handleShowReviews} style={linkStyle}>Reviews</NavLink>\n          </ItemLink>\n        </ListLink>\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","getTrendsDayMovies","params","api_key","axios","moviesDayTrends","getMoviesById","movieId","BASE_URL","moviesById","getCast","cast","getReviews","getSearchMovies","querySearch","query","movies","CastContainer","styled","TitleCast","CastList","CastListItem","CastImg","CastParagraph","CastRole","map","actor","src","profile_path","alt","name","width","height","character","id","ContainerReviews","ReviewsTitle","ReviewsList","ReviewsAuthor","ReviewsContent","reviews","review","author","content","ContainerMovie","ContainerLink","MovieTitle","MovieImg","ContainerWrap","ParagraphMovie","ListLink","ItemLink","linkStyle","color","textDecoration","fontSize","fontWeight","padding","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieDetails","setMovieDetails","setCast","setReviews","showCast","setShowCast","showReviews","setShowReviews","useEffect","fetchMovieDetails","movieResponse","data","console","log","fetchCast","castResponse","fetchReviews","reviewsResponse","results","to","current","style","backgroundColor","borderRadius","textAlign","poster_path","title","overview","vote_average","release_date","length","Cast","Review","onClick"],"sourceRoot":""}